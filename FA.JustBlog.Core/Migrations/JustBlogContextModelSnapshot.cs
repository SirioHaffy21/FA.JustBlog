// <auto-generated />
using System;
using FA.JustBlog.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FA.JustBlog.Core.Migrations
{
    [DbContext(typeof(JustBlogContext))]
    partial class JustBlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FA.JustBlog.Core.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UrlSlug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Online Selling",
                            Name = "Selling",
                            UrlSlug = "A/B/C.com"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Show case stream",
                            Name = "Streaming",
                            UrlSlug = "A/D/C.com"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Private place for everyone in Internet",
                            Name = "Invididuals",
                            UrlSlug = "A/B/C.com"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Place of Videos",
                            Name = "Videos",
                            UrlSlug = "A/B/D.com"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Updating online news",
                            Name = "News",
                            UrlSlug = "A/H/C.com"
                        },
                        new
                        {
                            CategoryId = 6,
                            Description = "Relaxing",
                            Name = "Meme",
                            UrlSlug = "B/C/D.com"
                        },
                        new
                        {
                            CategoryId = 7,
                            Description = "Only from 2 to 5 minutes",
                            Name = "Short Videos",
                            UrlSlug = "A/B/L.com"
                        },
                        new
                        {
                            CategoryId = 8,
                            Description = "Many wonderful photos",
                            Name = "Photos Post",
                            UrlSlug = "V/B/C.com"
                        },
                        new
                        {
                            CategoryId = 9,
                            Description = "Post for Q/A",
                            Name = "Selection",
                            UrlSlug = "V/T/C.com"
                        },
                        new
                        {
                            CategoryId = 10,
                            Description = "Introduce for games, products, ...",
                            Name = "Advertisement",
                            UrlSlug = "A/Y/D.com"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PostedOn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Published")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlSlug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PostId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = "Post01",
                            CategoryId = 1,
                            Count = 0,
                            PostContent = "Hàng uy tín chất lượng cao",
                            PostedOn = "Nhóm bán hàng quần áo",
                            Published = new DateTime(2021, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShortDescription = "Quần Áo nhập lậu từ Trung Quốc",
                            Title = "Bán Quần Áo",
                            UrlSlug = "M/N/O.com"
                        },
                        new
                        {
                            PostId = "Post02",
                            CategoryId = 1,
                            Count = 0,
                            Modified = new DateTime(2021, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostContent = "Hàng uy tín chất lượng cao",
                            PostedOn = "Fanpage bán nhà",
                            Published = new DateTime(2021, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShortDescription = "Nhà nhập lậu từ Campuchia",
                            Title = "Bán nhà",
                            UrlSlug = "M/A/I.com"
                        },
                        new
                        {
                            PostId = "Post03",
                            CategoryId = 2,
                            Count = 0,
                            PostContent = "Full Livestream 10/1/2022.",
                            PostedOn = "Kênh youtube nào đó",
                            Published = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShortDescription = "Nơi chia sẻ, kể khổ",
                            Title = "Streaming hôm qua ....",
                            UrlSlug = "Y/T/O.com"
                        },
                        new
                        {
                            PostId = "Post04",
                            CategoryId = 2,
                            Count = 0,
                            PostContent = "No Content",
                            PostedOn = "Kênh nimo nào đó",
                            ShortDescription = "Giao lưu đấu trường máy tính",
                            Title = "Stream hôm qua",
                            UrlSlug = "A/I/O.com"
                        },
                        new
                        {
                            PostId = "Post05",
                            CategoryId = 3,
                            Count = 0,
                            PostContent = "Snvv",
                            PostedOn = "Trang cá nhân của anh ấy",
                            Published = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShortDescription = "Hôm nay là ngày sinh nhật của anh ấy",
                            Title = "BirthDate",
                            UrlSlug = "S/O/A.com"
                        },
                        new
                        {
                            PostId = "Post06",
                            CategoryId = 4,
                            Count = 0,
                            Modified = new DateTime(2021, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostContent = "Khởi đầu ở Mu với cú hat trick siêu hạng",
                            PostedOn = "Youtube",
                            Published = new DateTime(2021, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShortDescription = "Nhìn lại sự nghiệp của Rooney ở MU",
                            Title = "Rooney's Timeline",
                            UrlSlug = "D/Q/O.com"
                        },
                        new
                        {
                            PostId = "Post07",
                            CategoryId = 5,
                            Count = 0,
                            PostContent = "Hà Nội dẫn đầu với ....",
                            PostedOn = "Vnexpress.net",
                            Published = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShortDescription = "Ngày nay ghi nhân gần 3000 người nhiễm",
                            Title = "Thông tin dịch bệnh 16/01/2022",
                            UrlSlug = "P/W/A.com"
                        },
                        new
                        {
                            PostId = "Post08",
                            CategoryId = 7,
                            Count = 0,
                            PostContent = "Câu chuyện làm xong bài báo cáo trong 1 ngày",
                            PostedOn = "Kho lưu trữ tin",
                            ShortDescription = "Điều nổi bật",
                            Title = "Tập tin của tôi",
                            UrlSlug = "M/A/T.com"
                        },
                        new
                        {
                            PostId = "Post09",
                            CategoryId = 8,
                            Count = 0,
                            PostContent = "Tôi đến hạ long và ăn cơm bình dân ở đó mất 80k",
                            PostedOn = "Trang cá nhân nào đó",
                            Published = new DateTime(2021, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShortDescription = "Hạ Vọng thật đẹp",
                            Title = "Ảnh đi du lịch",
                            UrlSlug = "T/A/R.com"
                        },
                        new
                        {
                            PostId = "Post10",
                            CategoryId = 10,
                            Count = 0,
                            Modified = new DateTime(2021, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostContent = "Ra mắt bản mới",
                            PostedOn = "Nhóm bán hàng quần áo",
                            Published = new DateTime(2021, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShortDescription = "Game thể thao top trên thế giới",
                            Title = "Game PES",
                            UrlSlug = "K/N/I.com"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.PostTagMap", b =>
                {
                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTagMaps");

                    b.HasData(
                        new
                        {
                            PostId = "Post01",
                            TagId = "Tag1"
                        },
                        new
                        {
                            PostId = "Post01",
                            TagId = "Tag2"
                        },
                        new
                        {
                            PostId = "Post02",
                            TagId = "Tag2"
                        },
                        new
                        {
                            PostId = "Post02",
                            TagId = "Tag4"
                        },
                        new
                        {
                            PostId = "Post03",
                            TagId = "Tag4"
                        },
                        new
                        {
                            PostId = "Post03",
                            TagId = "Tag6"
                        },
                        new
                        {
                            PostId = "Post03",
                            TagId = "Tag8"
                        },
                        new
                        {
                            PostId = "Post04",
                            TagId = "Tag4"
                        },
                        new
                        {
                            PostId = "Post04",
                            TagId = "Tag8"
                        },
                        new
                        {
                            PostId = "Post05",
                            TagId = "Tag3"
                        },
                        new
                        {
                            PostId = "Post05",
                            TagId = "Tag5"
                        },
                        new
                        {
                            PostId = "Post06",
                            TagId = "Tag5"
                        },
                        new
                        {
                            PostId = "Post07",
                            TagId = "Tag5"
                        },
                        new
                        {
                            PostId = "Post08",
                            TagId = "Tag7"
                        },
                        new
                        {
                            PostId = "Post08",
                            TagId = "Tag8"
                        },
                        new
                        {
                            PostId = "Post09",
                            TagId = "Tag8"
                        },
                        new
                        {
                            PostId = "Post10",
                            TagId = "Tag10"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Tag", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlSlug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = "Tag1",
                            Count = 100,
                            Description = "Tag for Selling",
                            Name = "Tag 1",
                            UrlSlug = "X/Y/Z.com"
                        },
                        new
                        {
                            TagId = "Tag2",
                            Count = 100,
                            Description = "Tag for Streaming",
                            Name = "Tag 2",
                            UrlSlug = "X/T/Z.com"
                        },
                        new
                        {
                            TagId = "Tag3",
                            Count = 100,
                            Description = "Tag for Invididuals",
                            Name = "Tag 3",
                            UrlSlug = "A/A/Z.com"
                        },
                        new
                        {
                            TagId = "Tag4",
                            Count = 100,
                            Description = "Tag for Videos",
                            Name = "Tag 4",
                            UrlSlug = "X/X/T.com"
                        },
                        new
                        {
                            TagId = "Tag5",
                            Count = 100,
                            Description = "Tag for News",
                            Name = "Tag 5",
                            UrlSlug = "X/V/A.com"
                        },
                        new
                        {
                            TagId = "Tag6",
                            Count = 100,
                            Description = "Tag for Meme",
                            Name = "Tag 6",
                            UrlSlug = "V/U/Z.com"
                        },
                        new
                        {
                            TagId = "Tag7",
                            Count = 100,
                            Description = "Tag for Short Videos",
                            Name = "Tag 7",
                            UrlSlug = "X/D/A.com"
                        },
                        new
                        {
                            TagId = "Tag8",
                            Count = 100,
                            Description = "Tag for Photos Post",
                            Name = "Tag 8",
                            UrlSlug = "B/A/Z.com"
                        },
                        new
                        {
                            TagId = "Tag9",
                            Count = 100,
                            Description = "Tag for Selection",
                            Name = "Tag 9",
                            UrlSlug = "A/O/Z.com"
                        },
                        new
                        {
                            TagId = "Tag10",
                            Count = 100,
                            Description = "Tag for Advertisement",
                            Name = "Tag 10",
                            UrlSlug = "U/Y/R.com"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.PostTagMap", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Post", "Post")
                        .WithMany("PostTagMaps")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FA.JustBlog.Core.Models.Tag", "Tag")
                        .WithMany("PostTagMaps")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.Navigation("PostTagMaps");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Tag", b =>
                {
                    b.Navigation("PostTagMaps");
                });
#pragma warning restore 612, 618
        }
    }
}
